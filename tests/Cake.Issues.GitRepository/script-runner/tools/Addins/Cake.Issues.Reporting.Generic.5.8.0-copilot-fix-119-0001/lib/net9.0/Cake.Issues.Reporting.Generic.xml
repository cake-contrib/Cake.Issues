<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cake.Issues.Reporting.Generic</name>
    </assembly>
    <members>
        <member name="T:Cake.Issues.Reporting.Generic.ColumnSortOrder">
            <summary>
            Possible sort orders for columns.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending">
            <summary>
            Ascending sorting.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Descending">
            <summary>
            Descending sorting.
            </summary>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.ColumnSortOrderExtensions">
            <summary>
            Extension methods for the <see cref="T:Cake.Issues.Reporting.Generic.ColumnSortOrder"/> enumeration.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.ColumnSortOrderExtensions.ToShortString(Cake.Issues.Reporting.Generic.ColumnSortOrder)">
            <summary>
            Returns the short identifier of the sort order.
            </summary>
            <param name="sortOrder">Sort order for which the identifier should be returned.</param>
            <returns>Short identifier of the sort order.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.DevExtremeTheme">
            <summary>
            Available themes for DevExtreme based templates.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.Light">
            <summary>
            Light theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.Dark">
            <summary>
            Dark theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.Contrast">
            <summary>
            High contrast theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.Carmine">
            <summary>
            Carmine theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.DarkMoon">
            <summary>
            Dark moon theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.SoftBlue">
            <summary>
            Soft blue theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.DarkViolet">
            <summary>
            Dark violet theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.GreenMist">
            <summary>
            Green mist theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.LightCompact">
            <summary>
            Compact light theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.DarkCompact">
            <summary>
            Compact dark theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.ContrastCompact">
            <summary>
            Compact and high contrast theme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialBlueLight">
            <summary>
            Theme in Google Material design in a light blue color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialLimeLight">
            <summary>
            Theme in Google Material design in a light lime color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialOrangeLight">
            <summary>
            Theme in Google Material design in a light orange color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialPurpleLight">
            <summary>
            Theme in Google Material design in a light purple color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialTealLight">
            <summary>
            Theme in Google Material design in a light teal color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialBlueDark">
            <summary>
            Theme in Google Material design in a dark blue color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialLimeDark">
            <summary>
            Theme in Google Material design in a dark lime color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialOrangeDark">
            <summary>
            Theme in Google Material design in a dark orange color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialPurpleDark">
            <summary>
            Theme in Google Material design in a dark purple color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialTealDark">
            <summary>
            Theme in Google Material design in a dark teal color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialBlueLightCompact">
            <summary>
            Theme in Google Material design in a compact light blue color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialLimeLightCompact">
            <summary>
            Theme in Google Material design in a compact light lime color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialOrangeLightCompact">
            <summary>
            Theme in Google Material design in a compact light orange color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialPurpleLightCompact">
            <summary>
            Theme in Google Material design in a compact light purple color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialTealLightCompact">
            <summary>
            Theme in Google Material design in a compact light teal color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialBlueDarkCompact">
            <summary>
            Theme in Google Material design in a compact dark blue color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialLimeDarkCompact">
            <summary>
            Theme in Google Material design in a compact dark lime color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialOrangeDarkCompact">
            <summary>
            Theme in Google Material design in a compact dark orange color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialPurpleDarkCompact">
            <summary>
            Theme in Google Material design in a compact dark purple color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.MaterialTealDarkCompact">
            <summary>
            Theme in Google Material design in a compact dark teal color scheme.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.FluentBlueLight">
            <summary>
            Theme in Fluent design in a light blue color scheme.
            Only available in commercial versions starting with 23.2.
            To use requires <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey"/> been set.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.FluentSaaSLight">
            <summary>
            Theme in Fluent design in a light SaaS color scheme.
            Only available in commercial versions starting with 23.2.
            To use requires <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey"/> been set.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.FluentBlueLightCompact">
            <summary>
            Theme in Fluent design in a compact light blue color scheme.
            Only available in commercial versions starting with 23.2.
            To use requires <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey"/> been set.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.FluentSaaSLightCompact">
            <summary>
            Theme in Fluent design in a compact light SaaS color scheme.
            Only available in commercial versions starting with 23.2.
            To use requires <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey"/> been set.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.FluentBlueDark">
            <summary>
            Theme in Fluent design in a dark blue color scheme.
            Only available in commercial versions starting with 23.2.
            To use requires <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey"/> been set.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.FluentSaaSDark">
            <summary>
            Theme in Fluent design in a dark SaaS color scheme.
            Only available in commercial versions starting with 23.2.
            To use requires <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey"/> been set.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.FluentBlueDarkCompact">
            <summary>
            Theme in Fluent design in a compact dark blue color scheme.
            Only available in commercial versions starting with 23.2.
            To use requires <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey"/> been set.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.FluentSaaSDarkCompact">
            <summary>
            Theme in Fluent design in a compact dark SaaS color scheme.
            Only available in commercial versions starting with 23.2.
            To use requires <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey"/> been set.
            </summary>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.DevExtremeThemeExtensions">
            <summary>
            Extension methods for the <see cref="T:Cake.Issues.Reporting.Generic.DevExtremeTheme"/> enumeration.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.DevExtremeThemeExtensions.GetCssFileName(Cake.Issues.Reporting.Generic.DevExtremeTheme)">
            <summary>
            Returns the CSS file name for a specific DevExtreme theme.
            </summary>
            <param name="theme">Theme for which the CSS file name should be returned.</param>
            <returns>CSS file name of the DevExtreme theme.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.ExpandoObjectExtensions">
            <summary>
            Extension for <see cref="T:System.Dynamic.ExpandoObject"/>.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.ExpandoObjectExtensions.SerializeToJsonString(System.Dynamic.ExpandoObject)">
            <summary>
            Serializes an <see cref="T:System.Dynamic.ExpandoObject"/> to a JSON string.
            </summary>
            <param name="expandoObject">Object which should be serialized.</param>
            <returns>Serialized object.</returns>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.ExpandoObjectExtensions.SerializeToJsonString(System.Collections.Generic.IEnumerable{System.Dynamic.ExpandoObject})">
            <summary>
            Serializes an <see cref="T:System.Collections.Generic.IEnumerable`1"/> to a JSON string.
            </summary>
            <param name="expandoObjects">Objects which should be serialized.</param>
            <returns>Serialized objects.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases">
             <summary>
             Contains functionality for creating issue reports in any text based format (HTML, Markdown, ...).
            
             NOTE: Use Cake.Issues.Reporting.Generic addin to use these aliases with Cake Script Runners and
             Cake.Frosting.Issues.Reporting.Generic to use these aliases with Cake Frosting.
             </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases.GenericIssueReportFormatFromEmbeddedTemplate(Cake.Core.ICakeContext,Cake.Issues.Reporting.Generic.GenericIssueReportTemplate)">
            <summary>
            Gets an instance of the generic report format using an embedded template.
            </summary>
            <param name="context">The context.</param>
            <param name="template">Template to use for generating the report.</param>
            <returns>Instance of the generic report format.</returns>
            <example>
            <para>Create HTML report using the diagnostic template:</para>
            <code>
            <![CDATA[
                CreateIssueReport(
                    issues,
                    GenericIssueReportFormatFromEmbeddedTemplate(GenericIssueReportTemplate.HtmlDiagnostic),
                    @"c:\repo",
                    @"c:\report.html");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases.GenericIssueReportFormatFromEmbeddedTemplate(Cake.Core.ICakeContext,Cake.Issues.Reporting.Generic.GenericIssueReportTemplate,System.Action{Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings})">
            <summary>
            Gets an instance of the generic report format using an embedded template with custom settings.
            </summary>
            <param name="context">The context.</param>
            <param name="template">Template to use for generating the report.</param>
            <param name="configurator">Action for defining the settings.</param>
            <returns>Instance of the generic report format.</returns>
            <example>
            <para>Create HTML report using the HtmlDxDataGrid template with custom title:</para>
            <code>
            <![CDATA[
                CreateIssueReport(
                    issues,
                    GenericIssueReportFormatFromEmbeddedTemplate(
                        GenericIssueReportTemplate.HtmlDxDataGrid,
                        x => x.WithOption(HtmlDxDataGridOption.Title, "My Issue Report")),
                    @"c:\repo",
                    @"c:\report.html");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases.GenericIssueReportFormatFromFilePath(Cake.Core.ICakeContext,Cake.Core.IO.FilePath)">
            <summary>
            Gets an instance of the generic report format using a local template.
            </summary>
            <param name="context">The context.</param>
            <param name="templatePath">Path to the template to use for generating the report.</param>
            <returns>Instance of the generic report format.</returns>
            <example>
            <para>Create HTML report from local template file:</para>
            <code>
            <![CDATA[
                CreateIssueReport(
                    issues,
                    GenericIssueReportFormatFromFilePath(@"c:\ReportTemplate.cshtml"),
                    @"c:\repo",
                    @"c:\report.html");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases.GenericIssueReportFormatFromFilePath(Cake.Core.ICakeContext,Cake.Core.IO.FilePath,System.Action{Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings})">
            <summary>
            Gets an instance of the generic report format using a local template with custom settings.
            </summary>
            <param name="context">The context.</param>
            <param name="templatePath">Path to the template to use for generating the report.</param>
            <param name="configurator">Action for defining the settings.</param>
            <returns>Instance of the generic report format.</returns>
            <example>
            <para>Create HTML report from local template file with custom title:</para>
            <code>
            <![CDATA[
                CreateIssueReport(
                    issues,
                    GenericIssueReportFormatFromFilePath(
                        @"c:\ReportTemplate.cshtml",
                        x => x.WithOption("Title", "My Issue Report")),
                    @"c:\repo",
                    @"c:\report.html");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases.GenericIssueReportFormatFromContent(Cake.Core.ICakeContext,System.String)">
            <summary>
            Gets an instance of the generic report format using a template string.
            </summary>
            <param name="context">The context.</param>
            <param name="templateContent">Content of the template to use for generating the report.</param>
            <returns>Instance of the generic report format.</returns>
            <example>
            <para>Create HTML report from a template string:</para>
            <code>
            <![CDATA[
                template =
                    "<ul>@foreach(var issue in Model){<li>@issue.Message</li>}</ul>";
                CreateIssueReport(
                    issues,
                    GenericIssueReportFormatFromContent(template),
                    @"c:\repo",
                    @"c:\report.html");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases.GenericIssueReportFormatFromContent(Cake.Core.ICakeContext,System.String,System.Action{Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings})">
            <summary>
            Gets an instance of the generic report format using a template string with custom settings.
            </summary>
            <param name="context">The context.</param>
            <param name="templateContent">Content of the template to use for generating the report.</param>
            <param name="configurator">Action for defining the settings.</param>
            <returns>Instance of the generic report format.</returns>
            <example>
            <para>Create HTML report from a template string with custom title:</para>
            <code>
            <![CDATA[
                template =
                    "<h1>@ViewBag.Title</h1><ul>@foreach(var issue in Model){<li>@issue.Message</li>}</ul>";
                CreateIssueReport(
                    issues,
                    GenericIssueReportFormatFromContent(
                        template,
                        x => x.WithOption("Title", "My Issue Report")),
                    @"c:\repo",
                    @"c:\report.html");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases.GenericIssueReportFormat(Cake.Core.ICakeContext,Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings)">
             <summary>
             Gets an instance of the generic report format using specified settings.
             </summary>
             <param name="context">The context.</param>
             <param name="settings">Settings for reading the MSBuild log.</param>
             <returns>Instance of the generic report format.</returns>
             <example>
             <para>Create HTML report:</para>
             <code>
             <![CDATA[
                 var settings =
                     GenericIssueReportFormatSettings
                         .FromEmbeddedTemplate(GenericIssueReportTemplate.HtmlDiagnostic);
            
                 CreateIssueReport(
                     issues,
                     GenericIssueReportFormat(settings),
                     @"c:\repo",
                     @"c:\report.html");
             ]]>
             </code>
             </example>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings">
            <summary>
            Settings for <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatAliases"/>.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.#ctor(Cake.Issues.Reporting.Generic.GenericIssueReportTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class.
            </summary>
            <param name="template">Template to use for generating the report.</param>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.#ctor(Cake.Core.IO.FilePath)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class.
            </summary>
            <param name="templatePath">Path to the template to use for generating the report.</param>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class.
            </summary>
            <param name="templateContent">Content of the template to use for generating the report.</param>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.Template">
            <summary>
            Gets the template to use for generating the report.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.Options">
            <summary>
            Gets the options to use for generating the report.
            See template for available options.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.FromEmbeddedTemplate(Cake.Issues.Reporting.Generic.GenericIssueReportTemplate)">
            <summary>
            Returns a new instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class from a template file on disk.
            </summary>
            <param name="template">Template to use for generating the report.</param>
            <returns>Instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class.</returns>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.FromFilePath(Cake.Core.IO.FilePath)">
            <summary>
            Returns a new instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class from a template file on disk.
            </summary>
            <param name="templatePath">Path to the template to use for generating the report.</param>
            <returns>Instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class.</returns>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.FromContent(System.String)">
            <summary>
            Returns a new instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class from the content
            of a template file.
            </summary>
            <param name="templateContent">Content of the template to use for generating the report.</param>
            <returns>Instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/> class.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettingsExtensions">
            <summary>
            Extension methods for <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings"/>.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettingsExtensions.WithOption(Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings,System.String,System.Object)">
            <summary>
            Adds an option which should be passed to the template.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">Key of the option.</param>
            <param name="value">Value of the option.</param>
            <returns>The <paramref name="settings"/> instance with option added to <see cref="P:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.Options"/>.</returns>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettingsExtensions.WithOption(Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings,System.Enum,System.Object)">
            <summary>
            Adds an option which should be passed to the template.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">Option which should be set.</param>
            <param name="value">Value of the option.</param>
            <returns>The <paramref name="settings"/> instance with option added to <see cref="P:Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings.Options"/>.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.GenericIssueReportGenerator">
            <summary>
            Generator for creating text based issue reports.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportGenerator.#ctor(Cake.Core.Diagnostics.ICakeLog,Cake.Issues.Reporting.Generic.GenericIssueReportFormatSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportGenerator"/> class.
            </summary>
            <param name="log">The Cake log context.</param>
            <param name="settings">Settings for reading the log file.</param>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportGenerator.InternalCreateReport(System.Collections.Generic.IEnumerable{Cake.Issues.IIssue})">
            <inheritdoc />
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate">
            <summary>
            Default templates provided by this addin.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate.HtmlDiagnostic">
            <summary>
            Template for an HTML report containing a list of all issues with all properties.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate.HtmlDataTable">
            <summary>
            Template for an HTML report containing a rich data table view with sorting and search functionality.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate.HtmlDxDataGrid">
            <summary>
            Template for an HTML report containing a rich data grid with sorting, filtering, grouping and search capabilities.
            See <see cref="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption"/> for template specific options.
            </summary>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.GenericIssueReportTemplateExtensions">
            <summary>
            Extension methods for <see cref="T:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate"/> enumeration.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.GenericIssueReportTemplateExtensions.GetTemplateResourceName(Cake.Issues.Reporting.Generic.GenericIssueReportTemplate)">
            <summary>
            Returns the name of the embedded template file.
            </summary>
            <param name="template">Template for which the embedded file name should be returned.</param>
            <returns>Name of the template file.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription">
            <summary>
            Description of a column in the <see cref="F:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate.HtmlDxDataGrid"/> template.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription.#ctor(System.String,System.Func{Cake.Issues.IIssue,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription"/> class.
            </summary>
            <param name="id">ID of the column.</param>
            <param name="valueRetriever">Function for retrieving the value of the column.</param>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription.Id">
            <summary>
            Gets the ID of the column.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription.ValueRetriever">
            <summary>
            Gets a function for retrieving the value of the column.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription.Caption">
            <summary>
            Gets or sets the caption of the column.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription.VisibleIndex">
            <summary>
            Gets or sets the position of the column regarding other columns.
            See <see cref="T:Cake.Issues.Reporting.Generic.ReportColumn"/> for values of default columns.
            Default value is zero, which means that the column will be added before any default columns.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription.AllowFiltering">
            <summary>
            Gets or sets a value indicating whether data can be filtered by this column or not.
            Applies only if <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EnableFiltering"/> is set.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription.AllowGrouping">
            <summary>
            Gets or sets a value indicating whether the user can group data by values of this column or not.
            Applies only if <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EnableGrouping"/> is set.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription.AllowSorting">
            <summary>
            Gets or sets a value indicating whether a user can sort rows by this column at runtime or not.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridDisplayMode">
            <summary>
            Available display modes for <see cref="F:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate.HtmlDxDataGrid"/> template.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridDisplayMode.Paged">
            <summary>
            Issues are displayed in pages with a pager in the footer.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridDisplayMode.InfiniteScroll">
            <summary>
            More issues are loaded when the user reaches the end of the grid.
            </summary>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridExportFormat">
            <summary>
            Available export formats for <see cref="F:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate.HtmlDxDataGrid"/> template.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridExportFormat.Excel">
            <summary>
            Microsoft Excel (*.xlsx).
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridExportFormat.Pdf">
            <summary>
            Portable Document Format (*.pdf).
            </summary>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption">
            <summary>
            Options for the <see cref="F:Cake.Issues.Reporting.Generic.GenericIssueReportTemplate.HtmlDxDataGrid"/> template.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.Title">
            <summary>
            Title of the report.
            Default value is <c>Issues Report</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.Theme">
            <summary>
            <see href="https://js.devexpress.com/">DevExtreme </see> theme to use.
            See <see cref="T:Cake.Issues.Reporting.Generic.DevExtremeTheme"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.DevExtremeTheme.Light"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ShowHeader">
            <summary>
            Flag if the title should be shown as header on the top of the page.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EnableSearching">
            <summary>
            Flag if the search panel for full text searching should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EnableGrouping">
            <summary>
            Flag if the group panel which allows end-user grouping should be visible or not.
            Either <c>true</c> or <c>false</c>.
            If <c>false</c> grouping defined by <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.GroupedColumns"/> is still applied.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EnableFiltering">
            <summary>
            Flag if filtering should be available or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ProviderTypeVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProviderType"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ProviderTypeSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProviderType"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ProviderNameVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProviderName"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ProviderNameSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProviderName"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.RunVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Run"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c> if any issue contains run information, otherwise <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.RunSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Run"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.PriorityVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Priority"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.PrioritySortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Priority"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Descending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.PriorityNameVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.PriorityName"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.PriorityNameSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.PriorityName"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Descending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ProjectPathVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProjectPath"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ProjectPathSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProjectPath"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ProjectNameVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProjectName"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ProjectNameSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProjectName"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FilePathVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.FilePath"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FilePathSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.FilePath"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FileDirectoryVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.FileDirectory"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FileDirectorySortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.FileDirectory"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FileNameVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.FileName"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FileNameSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.FileName"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.LineVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Line"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.LineSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Line"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EndLineVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.EndLine"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EndLineSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.EndLine"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Column"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Column"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EndColumnVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.EndColumn"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EndColumnSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.EndColumn"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.LocationVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Location"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.LocationSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Location"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.RuleIdVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleId"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.RuleIdSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleId"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.RuleNameVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleName"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.RuleNameSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleName"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.RuleUrlVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleUrl"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.RuleUrlSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleUrl"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.MessageVisible">
            <summary>
            Flag if the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Message"/> column should be visible or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.MessageSortOrder">
            <summary>
            Sort order of the <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Message"/> column if it is part of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns"/>.
            See <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ColumnSortOrder"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ColumnSortOrder.Ascending"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.GroupedColumns">
            <summary>
            List of <see cref="T:Cake.Issues.Reporting.Generic.ReportColumn"/> which should be grouped.
            Grouped columns are always visible.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProviderName"/> and <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Run"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.SortedColumns">
            <summary>
            List of <see cref="T:Cake.Issues.Reporting.Generic.ReportColumn"/> which should be sorted.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.PriorityName"/>, <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.ProjectName"/>,
            <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.FileDirectory"/>, <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.FileName"/>, <see cref="F:Cake.Issues.Reporting.Generic.ReportColumn.Line"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.AdditionalColumns">
            <summary>
            List of <see cref="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridColumnDescription"/> for additional columns which should be added to the grid.
            Default value is an empty list.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JQueryLocation">
            <summary>
            Location where <see href="https://jquery.com">jQuery</see> can be found.
            The following files need to be available:
            <list type="bullet">
            <item>
            <description><c>{JQueryLocation}/jquery-{JQueryVersion}.min.js</c></description>
            </item>
            </list>
            Default value is <c>https://ajax.aspnetcdn.com/ajax/jquery/</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JQueryVersion">
            <summary>
            Version of <see href="https://jquery.com">jQuery</see> which should be used.
            This version needs to match the version required by the selected <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/>.
            Default value is <c>3.7.1</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLocation">
            <summary>
            Location where the <see href="https://js.devexpress.com/">DevExtreme </see> libraries can be found.
            Below the location there needs to be a folder matching <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/> and
            inside there subfolders <c>js</c> and <c>css</c>.
            The following files need to be available:
            <list type="bullet">
            <item>
            <description><c>{DevExtremeLocation}/{DevExtremeVersion}/js/dx.all.js</c></description>
            </item>
            <item>
            <description><c>{DevExtremeLocation}/{DevExtremeVersion}/css/dx.common.css</c></description>
            </item>
            <item>
            <description><c>{DevExtremeLocation}/{DevExtremeVersion}/css/{Theme}</c></description>
            </item>
            </list>
            Default value is <c>https://cdn3.devexpress.com/jslib/</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion">
            <summary>
            Version of the <see href="https://js.devexpress.com/">DevExtreme </see> libraries which should be used.
            If setting this the matching <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JQueryVersion"/> needs to also be set.
            Default value is <c>23.1.13</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeLicenseKey">
            <summary>
            License key for DevExtreme.
            Required for version 23.2 and later.
            Default value is <c>null</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.IdeIntegrationSettings">
            <summary>
            Settings for having functionality to open files affected by issues in IDEs.
            Value needs to be an instance of <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.IdeIntegrationSettings"/>.
            Default value is <c>null</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.EnableExporting">
            <summary>
            Flag if exporting should be available or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>false</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ExportFileName">
            <summary>
            Default name of the export file without file name extension.
            Default value is <c>issue-report</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ExportFormat">
            <summary>
            Export format.
            See <see cref="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridExportFormat"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridExportFormat.Excel"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ExcelJsLocation">
            <summary>
            Location where <see href="https://github.com/exceljs/exceljs">ExcelJS</see> can be found.
            Below the location there needs to be a folder matching <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ExcelJsVersion"/>.
            The following files need to be available:
            <list type="bullet">
            <item>
            <description><c>{ExcelJsLocation}/{ExcelJsVersion}/exceljs.min.js</c></description>
            </item>
            </list>
            Default value is <c>https://cdnjs.cloudflare.com/ajax/libs/exceljs/</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ExcelJsVersion">
            <summary>
            Version of <see href="https://github.com/exceljs/exceljs">ExcelJS</see> which should be used.
            This version needs to match the version required by the selected <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/>.
            Default value is <c>4.4.0</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FileSaverJsLocation">
            <summary>
            Location where <see href="https://github.com/eligrey/FileSaver.js/">FileSaver.js</see> can be found.
            Below the location there needs to be a folder matching <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FileSaverJsVersion"/>.
            The following files need to be available:
            <list type="bullet">
            <item>
            <description><c>{FileSaverLocation}/{FileSaverVersion}/FileSaver.js</c></description>
            </item>
            </list>
            Default value is <c>https://cdnjs.cloudflare.com/ajax/libs/</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.FileSaverJsVersion">
            <summary>
            Version of <see href="https://github.com/eligrey/FileSaver.js/">FileSaver.js</see> which should be used.
            This version needs to match the version required by the selected <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/>.
            Default value is <c>2.0.5</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JsPdfLocation">
            <summary>
            Location where <see href="https://github.com/MrRio/jsPDF">jsPDF</see> can be found.
            Below the location there needs to be a folder matching <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JsPdfVersion"/>.
            The following files need to be available:
            <list type="bullet">
            <item>
            <description><c>{JsPdfLocation}/{JsPdfVersion}/jspdf.umd.min.js</c></description>
            </item>
            </list>
            Default value is <c>https://cdnjs.cloudflare.com/ajax/libs/jspdf/</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JsPdfVersion">
            <summary>
            Version of <see href="https://github.com/MrRio/jsPDF">jsPDF</see> which should be used.
            This version needs to match the version required by the selected <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/>.
            Default value is <c>3.0.1</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JsPdfAutotableLocation">
            <summary>
            Location where <see href="https://github.com/simonbengtsson/jsPDF-AutoTable">jsPDF-AutoTable plugin</see> can be found.
            Below the location there needs to be a folder matching <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JsPdfAutotableVersion"/>.
            The following files need to be available:
            <list type="bullet">
            <item>
            <description><c>{JsPdfAutotableLocation}/{JsPdfAutotableVersion}/jspdf.plugin.autotable.min.js</c></description>
            </item>
            </list>
            Default value is <c>https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.JsPdfAutotableVersion">
            <summary>
            Version of <see href="https://github.com/simonbengtsson/jsPDF-AutoTable">jsPDF-AutoTable plugin</see> which should be used.
            This version needs to match the version required by the selected <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DevExtremeVersion"/>.
            Default value is <c>5.0.2</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.DisplayMode">
            <summary>
            Display mode of the grid.
            See <see cref="T:Cake.Issues.Reporting.Generic.HtmlDxDataGridDisplayMode"/> for possible values.
            Default value is <see cref="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridDisplayMode.Paged"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.ShowColumnChooser">
            <summary>
            Flag if the column chooser to show and hide columns should be available or not.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.PersistState">
            <summary>
            Flag if customization in the report should be persisted.
            Either <c>true</c> or <c>false</c>.
            Default value is <c>true</c>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.HtmlDxDataGridOption.StorageKey">
            <summary>
            Key for the state storage.
            Reports with the same key will share customizations.
            Default value is <c>CakeIssuesReportingGeneric</c>.
            </summary>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.IdeIntegrationSettings">
            <summary>
            Settings how issues should be integrated to IDEs.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.IdeIntegrationSettings.JavaScript">
            <summary>
            Gets or sets additional JavaScript which should be added.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.IdeIntegrationSettings.OpenInIdeCall">
            <summary>
            Gets or sets JavaScript which should be called to open the file affected by an issue in an IDE.
            </summary>
        </member>
        <member name="P:Cake.Issues.Reporting.Generic.IdeIntegrationSettings.MenuEntryText">
            <summary>
            Gets or sets text which should be shown in the dropdown menu for opening the file affected
            by an issue in an IDE.
            Default value is <c>Open in IDE</c>.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.IdeIntegrationSettings.GetOpenInIdeCall(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the JavaScript which should be called to open the file affected by an issue in an IDE
            with all patterns of <see cref="P:Cake.Issues.Reporting.Generic.IdeIntegrationSettings.OpenInIdeCall"/> replaced.
            </summary>
            <param name="filePathExpression">Expression which should be used to get the path and name
            of the file at runtime.</param>
            <param name="lineExpression">Expression which should be used to get the line number at runtime.</param>
            <param name="endLineExpression">Expression which should be used to get the end of the line range at runtime.</param>
            <param name="columnExpression">Expression which should be used to get the column number at runtime.</param>
            <param name="endColumnExpression">Expression which should be used to get the end of the column range at runtime.</param>
            <returns>JavaScript which should be called to open the file affected by an issue in an IDE
            with all patterns replaced.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.IIssueExtensions">
            <summary>
            Extension for <see cref="T:Cake.Issues.IIssue"/>.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.IIssueExtensions.GetExpandoObject(Cake.Issues.IIssue,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Func{Cake.Issues.IIssue,System.Object}})">
            <summary>
            Returns a dynamic object containing the properties of an issue.
            </summary>
            <param name="issue">Issue for which the dynamic object should be returned.</param>
            <param name="addProviderType">Flag if value of <see cref="P:Cake.Issues.IIssue.ProviderType"/> should be added.</param>
            <param name="addProviderName">Flag if value of <see cref="P:Cake.Issues.IIssue.ProviderName"/> should be added.</param>
            <param name="addRun">Flag if value of <see cref="P:Cake.Issues.IIssue.Run"/> should be added.</param>
            <param name="addPriority">Flag if value of <see cref="P:Cake.Issues.IIssue.Priority"/> should be added.</param>
            <param name="addPriorityName">Flag if value of <see cref="P:Cake.Issues.IIssue.PriorityName"/> should be added.</param>
            <param name="addProjectPath">Flag if value of <see cref="M:Cake.Issues.IIssueExtensions.ProjectPath(Cake.Issues.IIssue)"/> should be added.</param>
            <param name="addProjectName">Flag if value of <see cref="P:Cake.Issues.IIssue.ProjectName"/> should be added.</param>
            <param name="addFilePath">Flag if value of <see cref="P:Cake.Issues.IIssue.AffectedFileRelativePath"/> should be added.</param>
            <param name="addFileDirectory">Flag if value of <see cref="M:Cake.Issues.IIssueExtensions.FileDirectory(Cake.Issues.IIssue)"/> should be added.</param>
            <param name="addFileName">Flag if value of <see cref="M:Cake.Issues.IIssueExtensions.FileName(Cake.Issues.IIssue)"/> should be added.</param>
            <param name="addFileLink">Flag if value of <see cref="P:Cake.Issues.IIssue.FileLink"/> should be added.</param>
            <param name="addLine">Flag if value of <see cref="P:Cake.Issues.IIssue.Line"/> should be added.</param>
            <param name="addEndLine">Flag if value of <see cref="P:Cake.Issues.IIssue.EndLine"/> should be added.</param>
            <param name="addColumn">Flag if value of <see cref="P:Cake.Issues.IIssue.Column"/> should be added.</param>
            <param name="addEndColumn">Flag if value of <see cref="P:Cake.Issues.IIssue.EndColumn"/> should be added.</param>
            <param name="addLocation">Flag if value of <see cref="M:Cake.Issues.IIssueExtensions.LineRange(Cake.Issues.IIssue)"/> should be added.</param>
            <param name="addRuleId">Flag if value of <see cref="P:Cake.Issues.IIssue.RuleId"/> should be added.</param>
            <param name="addRuleName">Flag if value of <see cref="P:Cake.Issues.IIssue.RuleName"/> should be added.</param>
            <param name="addRuleUrl">Flag if value of <see cref="P:Cake.Issues.IIssue.RuleUrl"/> should be added.</param>
            <param name="addMessageText">Flag if value of <see cref="P:Cake.Issues.IIssue.MessageText"/> should be added.</param>
            <param name="addMessageHtml">Flag if value of <see cref="P:Cake.Issues.IIssue.MessageHtml"/> should be added.</param>
            <param name="fallbackToTextMessageIfHtmlMessageNotAvailable">Flag if value of <see cref="P:Cake.Issues.IIssue.MessageText"/> should be
            returned if <see cref="P:Cake.Issues.IIssue.MessageHtml"/> is not available.</param>
            <param name="addMessageMarkdown">Flag if value of <see cref="P:Cake.Issues.IIssue.MessageMarkdown"/> should be added.</param>
            <param name="fallbackToTextMessageIfMarkdownMessageNotAvailable">Flag if value of <see cref="P:Cake.Issues.IIssue.MessageText"/> should be
            returned if <see cref="P:Cake.Issues.IIssue.MessageMarkdown"/> is not available.</param>
            <param name="additionalValues">Additional values which should be added to the object.</param>
            <returns>Dynamic object containing the properties of the issue.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.ReportColumn">
            <summary>
            Name of columns in a report.
            The value can be used for default positions of the columns.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.ProviderType">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.ProviderType"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.ProviderName">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.ProviderName"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.Priority">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.Priority"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.PriorityName">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.PriorityName"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.ProjectPath">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.ProjectFileRelativePath"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.ProjectName">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.ProjectName"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.FilePath">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.AffectedFileRelativePath"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.FileDirectory">
            <summary>
            Column for the value returned by <see cref="M:Cake.Issues.IIssueExtensions.FilePath(Cake.Issues.IIssue)"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.FileName">
            <summary>
            Column for the value returned by <see cref="M:Cake.Issues.IIssueExtensions.FileName(Cake.Issues.IIssue)"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.Line">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.Line"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.EndLine">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.EndLine"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.Column">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.Column"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.EndColumn">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.EndColumn"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.Location">
            <summary>
            Column for the value returned by <see cref="M:Cake.Issues.IIssueExtensions.LineRange(Cake.Issues.IIssue)"/>.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleId">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.RuleId"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleName">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.RuleName"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.RuleUrl">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.RuleUrl"/> field.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.Message">
            <summary>
            Column for the message. This can either be the <see cref="P:Cake.Issues.IIssue.MessageText"/>,
            <see cref="P:Cake.Issues.IIssue.MessageHtml"/> or <see cref="P:Cake.Issues.IIssue.MessageMarkdown"/> field,
            depending on the report.
            </summary>
        </member>
        <member name="F:Cake.Issues.Reporting.Generic.ReportColumn.Run">
            <summary>
            Column for the <see cref="P:Cake.Issues.IIssue.Run"/> field.
            </summary>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.StringExtensions">
            <summary>
            Extensions for <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.StringExtensions.SanitizeHtmlIdAttribute(System.String)">
            <summary>
            Sanitizes a string to be a valid HTML ID.
            </summary>
            <param name="input">String which should be sanitized.</param>
            <returns><paramref name="input"/> as valid HTML ID.</returns>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.StringExtensions.GetIndexOfFirstLetter(System.String)">
            <summary>
            Returns the index of the first letter in a string.
            </summary>
            <param name="input">String to search for a letter.</param>
            <returns>Index of the first letter in <paramref name="input"/>.</returns>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.StringExtensions.SanitizeHtmlIdRegEx">
            <remarks>
            Pattern:<br/>
            <code>/^[^a-z]+|[^\\w:-]+</code><br/>
            Explanation:<br/>
            <code>
            ○ Match with 2 alternative expressions, atomically.<br/>
                ○ Match a sequence of expressions.<br/>
                    ○ Match '/'.<br/>
                    ○ Match if at the beginning of the string.<br/>
                    ○ Match a character in the set [^a-z] atomically at least once.<br/>
                ○ Match a character in the set [^-:\w] atomically at least once.<br/>
            </code>
            </remarks>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.UriExtensions">
            <summary>
            Extensions for the <see cref="T:System.Uri"/> class.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.UriExtensions.Append(System.Uri,System.String[])">
            <summary>
            Appends paths to a URI.
            </summary>
            <param name="uri">URI to which the paths should be appended.</param>
            <param name="paths">Paths to append.</param>
            <returns>URI with appended paths.</returns>
        </member>
        <member name="T:Cake.Issues.Reporting.Generic.ViewBagHelper">
            <summary>
            Helper for working with the ViewBag in templates.
            </summary>
        </member>
        <member name="M:Cake.Issues.Reporting.Generic.ViewBagHelper.ValueOrDefault``1(System.Object,``0)">
            <summary>
            Returns the value or a default value if <paramref name="value"/> is null.
            </summary>
            <typeparam name="T">Type of the value.</typeparam>
            <param name="value">Value which should be returned.</param>
            <param name="defaultValue">Value which should be returned if <paramref name="value"/> is null.</param>
            <returns><paramref name="value"/> or <paramref name="defaultValue"/> if <paramref name="value"/> is null.</returns>
        </member>
        <member name="M:LitJson.JsonData.ContainsKey(System.String)">
            <summary>
            Determines whether the json contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate in the json.</param>
            <returns>true if the json contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the SanitizeHtmlIdRegEx method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.SanitizeHtmlIdRegEx_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
